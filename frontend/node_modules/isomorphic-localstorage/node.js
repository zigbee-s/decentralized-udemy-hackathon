"use strict";

const { LocalStorage } = require("node-localstorage");

class MockLocalStorage {
  _store;

  constructor() {
    this._store = {};
  }

  getItem(key) {
    if (typeof key !== "string") {
      throw new Error("Key must be a string!");
    }

    return this._store?.[key] ?? null;
  }

  removeItem(key) {
    if (typeof key !== "string") {
      throw new Error("Key must be a string!");
    }

    if (typeof this._store?.[key] !== "undefined") {
      this._store[key] = undefined;
    }
  }

  setItem(key, value) {
    if (typeof key !== "string" || typeof value !== "string") {
      throw new Error("Both key and value must be strings!");
    }

    this._store[key] = value;
  }
}

const getStorage = (location) => {
  let storage;

  try {
    storage = new LocalStorage(location);
  } catch (error) {
    if (typeof error.code !== "undefined" && error.code === "ENOENT") {
      console.log(
        "[isomorphic-localstorage] Unable to instantiate localStorage in given location due to lack of permissions; mock will be used instead."
      );

      storage = new MockLocalStorage();
    } else {
      throw error;
    }
  }

  return storage;
};

module.exports = getStorage;
